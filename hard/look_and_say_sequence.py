"""
Look-And-Say Sequence

The look-and-say sequence is generated by describing each group
of identical digits in the previous term. If we start at "1", the first five terms in the sequence are:

"1" = "one 1" = "11"
"11" = "two 1's" = "21"
"21" = "one 2, one 1" = "1211"
"1211" = "one 1, one 2, two 1's" = "111221"
"111221" = "three 1's, two 2's, one 1" = "312211"
Given a term (as a string), return the next term in the sequence.

Examples
look_and_say("1211") ➞ "111221"

look_and_say("111221") ➞ "312211"

look_and_say("31131211131221") ➞ "13211311123113112211"
Notes
Terms will only include the digits 1, 2, and 3.

"""

import re
from unittest import TestCase


def look_and_say(term):
    return "".join([f"{len(item.group(0))}{item.group(0)[0]}"
                    for item in re.finditer(r"(.)\1*", term)])


TestCase().assertEqual(look_and_say("13112221"), "1113213211")
TestCase().assertEqual(look_and_say("1113213211"), "31131211131221")
TestCase().assertEqual(look_and_say("31131211131221"), "13211311123113112211")
TestCase().assertEqual(look_and_say("13211311123113112211"), "11131221133112132113212221")
TestCase().assertEqual(look_and_say("11131221133112132113212221"), "3113112221232112111312211312113211")
TestCase().assertEqual(look_and_say("3113112221232112111312211312113211"),
                       "1321132132111213122112311311222113111221131221")
TestCase().assertEqual(look_and_say("1321132132111213122112311311222113111221131221"),
                       "11131221131211131231121113112221121321132132211331222113112211")
TestCase().assertEqual(look_and_say("11131221131211131231121113112221121321132132211331222113112211"),
                       "311311222113111231131112132112311321322112111312211312111322212311322113212221")
TestCase().assertEqual(look_and_say("311311222113111231131112132112311321322112111312211312111322212311322113212221"),
                       "132113213221133112132113311211131221121321131211132221123113112221131112311332111213211322211312113211")
TestCase().assertEqual(look_and_say(
    "132113213221133112132113311211131221121321131211132221123113112221131112311332111213211322211312113211"),
    "11131221131211132221232112111312212321123113112221121113122113111231133221121321132132211331121321231231121113122113322113111221131221")
